apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-server
  namespace: kube-server
  labels:
    app: kube-server
  annotations:
    app.kubernetes.io/managed-by: "Helm"
    meta.helm.sh/release-namespace: "default"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: kube-server
  template:
    metadata:
      labels:
        app: kube-server
    spec:
      containers:
      - name: kube-server
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        securityContext:
          runAsUser: {{ .Values.container.userID }}
          runAsGroup: {{ .Values.container.groupID }}
          allowPrivilegeEscalation: false
        env:
          - name: PORT
            value: "{{ .Values.container.containerPort }}"
          - name: REDIS_ADDR
            value: "{{ .Values.redis.redisAddr }}"
        ports:
        - containerPort: {{ .Values.container.containerPort }}
        volumeMounts:
        - name: server-certs
          mountPath: "/kube-server/server-certs"
          readOnly: true
        - name: redis-certs
          mountPath: "/kube-server/redis-certs"
          readOnly: true
        - name: client-certs
          mountPath: "/kube-server/client-certs"
          readOnly: true
        livenessProbe:
          exec:
            command: ["./liveness.sh"]
        startupProbe:
           exec:
            command: ["./liveness.sh"]
           failureThreshold: 30
           periodSeconds: 10
      volumes:
      - name: server-certs
        secret:
          secretName: certificates-tls-secret
      - name: redis-certs
        secret:
          secretName: redis-tls-client
      - name: client-certs
        secret:
          secretName: client-tls-secret
